#!/bin/bash

## DEFINE FUNCTIONS ##

# function to display a string
function display_str {
    if [ ${#1} -ge 74 ]; then
	return 0
    fi
    
    i=3;
    
    echo -n "|  "
    while [ $i -lt 77 ]; do
	if [ $i -eq 3 ]; then
	    echo -n $1
	    i=$(($i + ${#1} + 1))
	else
	    echo -n " "
	    i=$(($i + 1))
	fi
    done
    echo "  |"
}

# function to display a centered string
function display_str_center {
    start=$((40 - ${#1} / 2))
    i=0;

    echo -n "|"
    while [ $i -lt 78 ]; do
	if [ $i -eq $start ]; then
	    echo -n $1
	    i=$(($i + ${#1} + 1))
	else
	    echo -n " "
	    i=$(($i + 1))
	fi
    done
    echo "|"
}

# function to display the header of the script
function display_header {
    display_full_line
    display_empty_line
    display_str_center "wc's addon"
    display_empty_line
    display_full_line
}

# function to display the footer of the script
function display_footer {
    display_full_line
    echo "|                                                              by LuigiPeace  |"
    display_full_line
}

# function to display an empty line
function display_empty_line {
    echo "|                                                                             |"    
}

# function to display a full line
function display_full_line {
    echo "+-----------------------------------------------------------------------------+"
}

# function to display a new line of the form :
# |  KEY: VALUE                                              |
function display_key_value {
    i=$((${#1} + ${#2} + 7))
    
    echo -n "|  $1: $2"
    while [ $i -lt 80 ]; do
	echo -n " "
	i=$(($i + 1))
    done
    echo "|"
}

function get_nbr_lines {
    _folders_paths=(`ls -R | grep ":$"`)
    _nbr=0
    _result=$2
    i=0

    # Loop over every folders
    while [ $i -lt ${#_folders_paths[@]} ]; do
	# Remove : character at the end of each line
    	_folder=`echo "${_folders_paths[$i]}" | head -c -2`
	
	# Get each file of the given format in the current folder
	_files=(`ls "$_folder" | grep "\$1$"`)

	j=0
	while [ $j -lt ${#_files[@]} ]; do
	    _final="$_folder/${_files[$j]}"
	    if [ -n $_final ] && [ -f $_final ]; then
	    	_nbr=$(($_nbr + `cat "$_final" | wc -l` - 10))
	    fi
	    
	    j=$(($j + 1))
	done
	
    	i=$(($i + 1))
    done

    eval $_result=$_nbr
}

## ENDIF FUNCTIONS ##



## START ##

# Get project name
project="${PWD##*/}"

# Get number of files *.c & *.h
files=$((`ls -R | grep "\.h$" | wc -l` + `ls -R | grep "\.c$" | wc -l`))

folders=(`ls -R | grep ":$"`)
folders=$((${#folders[@]} - 1))

# Get number of lines
headers=0
sources=0
total=0

get_nbr_lines ".c" headers
get_nbr_lines ".h" sources
total=$(($headers + $sources))

# Display
display_header
display_empty_line
display_str "This script count the number of lines of code of your C project."
display_str "It shows real number of lines of code (avoid headers and empty new line)."
display_empty_line
display_full_line
display_empty_line
display_key_value "Project name           " $project
display_key_value "Number of files        " $files
display_key_value "Number of folders      " $folders
display_empty_line
display_key_value "Lines of headers files " $headers
display_key_value "Lines of sources files " $sources
display_key_value "Total number of lines  " $total
display_empty_line
display_empty_line
display_footer

## END ##
